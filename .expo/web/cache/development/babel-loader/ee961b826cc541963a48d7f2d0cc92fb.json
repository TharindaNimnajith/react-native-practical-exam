{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { DarkTheme, DefaultTheme, NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/modals/ModalScreen\";\nimport NotFoundScreen from \"../screens/shared/NotFoundScreen\";\nimport TabOneScreen from \"../screens/tabs/TabOneScreen\";\nimport TabTwoScreen from \"../screens/tabs/TabTwoScreen\";\nimport TabThreeScreen from \"../screens/tabs/TabThreeScreen\";\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\nvar BottomTab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: {\n        title: \"Home\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(TabBarIcon, {\n            name: \"home\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: \"Explore\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(TabBarIcon, {\n            name: \"search\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabThree\",\n      component: TabThreeScreen,\n      options: {\n        title: \"Your Library\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(TabBarIcon, {\n            name: \"book\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","DarkTheme","DefaultTheme","NavigationContainer","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","TabThreeScreen","LoginScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","headerShown","BottomTabNavigator","title","presentation","BottomTab","tabBarActiveTintColor","tint","tabBarIcon","color","TabBarIcon","props","marginBottom"],"sources":["D:/react-native-practical-exam/navigation/index.tsx"],"sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport {FontAwesome} from '@expo/vector-icons';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\nimport {DarkTheme, DefaultTheme, NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport {ColorSchemeName} from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport ModalScreen from '../screens/modals/ModalScreen';\r\nimport NotFoundScreen from '../screens/shared/NotFoundScreen';\r\nimport TabOneScreen from '../screens/tabs/TabOneScreen';\r\nimport TabTwoScreen from '../screens/tabs/TabTwoScreen';\r\nimport TabThreeScreen from '../screens/tabs/TabThreeScreen';\r\nimport LoginScreen from \"../screens/auth/LoginScreen\";\r\nimport {RootStackParamList, RootTabParamList} from '../types';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\n\r\nexport default function Navigation({colorScheme}: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator/>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={{headerShown: false}}/>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{headerShown: false}}/>\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{title: 'Oops!'}}/>\r\n      <Stack.Group screenOptions={{presentation: 'modal'}}>\r\n        <Stack.Screen name=\"Modal\" component={ModalScreen}/>\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  // noinspection JSUnusedGlobalSymbols\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"TabOne\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}>\r\n      <BottomTab.Screen\r\n        name=\"TabOne\"\r\n        component={TabOneScreen}\r\n        options={{\r\n          title: \"Home\",\r\n          headerShown: false,\r\n          tabBarIcon: ({color}) => <TabBarIcon name=\"home\" color={color}/>,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"TabTwo\"\r\n        component={TabTwoScreen}\r\n        options={{\r\n          title: \"Explore\",\r\n          headerShown: false,\r\n          tabBarIcon: ({color}) => <TabBarIcon name=\"search\" color={color}/>,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"TabThree\"\r\n        component={TabThreeScreen}\r\n        options={{\r\n          title: \"Your Library\",\r\n          headerShown: false,\r\n          tabBarIcon: ({color}) => <TabBarIcon name=\"book\" color={color}/>,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>['name'];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{marginBottom: -3}} {...props} />;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}