{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { DarkTheme, DefaultTheme, NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\nvar BottomTab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Tab One',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: 'Tab Two',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","DarkTheme","DefaultTheme","NavigationContainer","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"sources":["D:/react-native-practical-exam/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport {FontAwesome} from '@expo/vector-icons';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport {DarkTheme, DefaultTheme, NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport {ColorSchemeName, Pressable} from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport {RootStackParamList, RootTabParamList, RootTabScreenProps} from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({colorScheme}: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator/>\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{headerShown: false}}/>\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{title: 'Oops!'}}/>\n      <Stack.Group screenOptions={{presentation: 'modal'}}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen}/>\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({navigation}: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Tab One',\n          tabBarIcon: ({color}) => <TabBarIcon name=\"code\" color={color}/>,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({pressed}) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{marginRight: 15}}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Tab Two',\n          tabBarIcon: ({color}) => <TabBarIcon name=\"code\" color={color}/>,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{marginBottom: -3}} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}